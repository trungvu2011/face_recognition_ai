import cv2
import os
import pickle
import face_recognition
import numpy as np

# ƒê∆∞·ªùng d·∫´n l∆∞u dataset v√† model
DATASET_PATH = os.path.join(os.path.dirname(__file__), "../dataset")
ENCODINGS_PATH = os.path.join(os.path.dirname(__file__), "../models/encodings.pickle")

# T·∫°o th∆∞ m·ª•c dataset n·∫øu ch∆∞a c√≥
os.makedirs(DATASET_PATH, exist_ok=True)

# Nh·∫≠p t√™n ng∆∞·ªùi d√πng
name = input("Nh·∫≠p t√™n c·ªßa b·∫°n: ").strip()
user_path = os.path.join(DATASET_PATH, name)
os.makedirs(user_path, exist_ok=True)

# Load d·ªØ li·ªáu nh·∫≠n di·ªán khu√¥n m·∫∑t hi·ªán c√≥
if os.path.exists(ENCODINGS_PATH):
    with open(ENCODINGS_PATH, "rb") as f:
        data = pickle.load(f)
else:
    data = {"encodings": [], "names": []}

# Kh·ªüi ƒë·ªông camera
cap = cv2.VideoCapture(0)
count = len(os.listdir(user_path))  # ƒê·∫øm s·ªë ·∫£nh ƒë√£ c√≥ trong th∆∞ m·ª•c

while True:
    ret, frame = cap.read()
    if not ret:
        break

    cv2.imshow("Capture Face", frame)
    key = cv2.waitKey(1) & 0xFF

    # Ch·ª•p ·∫£nh khi nh·∫•n ph√≠m "s"
    if key == ord("s"):
        rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
        face_locations = face_recognition.face_locations(rgb_frame)

        if face_locations:
            count += 1
            top, right, bottom, left = face_locations[0]
            face_image = frame[top:bottom, left:right]

            img_path = os.path.join(user_path, f"{count}.jpg")
            cv2.imwrite(img_path, face_image)
            print(f"üì∏ ·∫¢nh {count} ƒë√£ l∆∞u!")

            # M√£ h√≥a khu√¥n m·∫∑t
            face_encodings = face_recognition.face_encodings(rgb_frame, [face_locations[0]])
            if face_encodings:
                data["encodings"].append(face_encodings[0])
                data["names"].append(name)
                print("‚úÖ Khu√¥n m·∫∑t ƒë√£ ƒë∆∞·ª£c m√£ h√≥a v√† th√™m v√†o d·ªØ li·ªáu!")

        else:
            print("‚ùå Kh√¥ng t√¨m th·∫•y khu√¥n m·∫∑t, vui l√≤ng th·ª≠ l·∫°i!")

    # Tho√°t khi nh·∫•n ph√≠m "q"
    elif key == ord("q"):
        break

# L∆∞u d·ªØ li·ªáu m·ªõi v√†o file encodings.pickle
with open(ENCODINGS_PATH, "wb") as f:
    pickle.dump(data, f)
    print("üíæ D·ªØ li·ªáu nh·∫≠n di·ªán ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!")

cap.release()
cv2.destroyAllWindows()
